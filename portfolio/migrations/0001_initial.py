# Generated by Django 5.0.4 on 2024-05-07 18:22

import django.db.models.deletion
import django.utils.timezone
import portfolio.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Заголовок')),
                ('text', models.TextField(blank=True, max_length=700, verbose_name='Описание')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('budget', models.CharField(blank=True, choices=[('', '-'), ('От 100 тыс до 1 млн', 'От 100 тыс до 1 млн'), ('От 1 млн до 10 млн', 'От 1 млн до 10 млн'), ('От 10 млн до 100 млн', 'От 10 млн до 100 млн'), ('Более 100 млн', 'Более 100 млн')], max_length=50, verbose_name='Бюджет в рублях')),
                ('post_type', models.CharField(blank=True, choices=[('interview', 'Интервью'), ('review', 'Рецензия'), ('shooting', 'Съемка'), ('trailers_and_announcements', 'Трейлеры и анонсы новых проектов'), ('awards_and_achievements', 'Информация о наградах и достижениях режиссера'), ('festivals_and_events', 'Фестивали и мероприятия'), ('educational_materials_and_lessons', 'Обучающие материалы и уроки'), ('personal_stories_and_interesting_facts', 'Личные истории и интересные факты из жизни'), ('scenario', 'Сценарий'), ('shooting_locations_and_schedules', 'Информация о местах съемок и графиках'), ('commercial', 'Рекламный ролик'), ('music_video', 'Музыкальный клип'), ('short_film', 'Короткометражный фильм'), ('feature_film', 'Полнометражный фильм'), ('tv_show', 'Телешоу'), ('web_series', 'Веб-сериал')], max_length=50, verbose_name='Тип поста')),
                ('genre', models.CharField(blank=True, choices=[('family_drama', 'Семейная Драма'), ('historical_drama', 'Историческая Драма'), ('war_drama', 'Военная Драма'), ('criminal_drama', 'Криминальная Драма'), ('romantic_comedy', 'Романтическая Комедия'), ('black_comedy', 'Черная Комедия'), ('mystic', 'Мистика'), ('slasher', 'Слешер'), ('thriller', 'Триллер'), ('children', 'Детское'), ('educational', 'Образовательное'), ('entertainment', 'Развлекательное'), ('sci_fi', 'Научная Фантастика'), ('fantasy', 'Фентези'), ('biographical_documentary', 'Биографический Документальный Фильм'), ('nature_documentary', 'Природоведческий Документальный Фильм'), ('historical_documentary', 'Исторический Документальный Фильм')], max_length=64, verbose_name='Жанр')),
                ('style', models.CharField(blank=True, choices=[('documentary', 'Документальный'), ('pseudo_documentary', 'Псевдодокументальный'), ('author', 'Авторский'), ('experimental', 'Экспериментальный'), ('expressionism', 'Экспрессионизм'), ('surrealism', 'Сюрреализм'), ('noir', 'Нуар'), ('neorealism', 'Неореализм'), ('musical', 'Мюзикл'), ('realism', 'Реализм'), ('parody', 'Пародийный'), ('sarcastic', 'Саркастический'), ('tragic_melodramatic', 'Трагический Мелодраматический')], max_length=64, verbose_name='Стиль')),
                ('age_limit', models.CharField(blank=True, choices=[('0+', '0+'), ('6+', '6+'), ('12+', '12+'), ('16+', '16+'), ('18+', '18+')], max_length=3, verbose_name='Возрастные ограничения')),
                ('post_slug', models.SlugField()),
                ('music_genre', models.CharField(blank=True, choices=[('pop', 'Поп'), ('rock', 'Рок'), ('jazz', 'Джаз'), ('blues', 'Блюз'), ('classical', 'Классическая'), ('electronic', 'Электронная'), ('hip_hop', 'Хип-хоп'), ('rap', 'Рэп'), ('country', 'Кантри'), ('folk', 'Фолк'), ('r_and_b', 'R&B (Ритм-энд-блюз)'), ('reggae', 'Регги'), ('punk', 'Панк'), ('metal', 'Металл'), ('soul', 'Соул'), ('funk', 'Фонк'), ('disco', 'Диско'), ('techno', 'Техно'), ('dubstep', 'Дабстеп'), ('indie', 'Инди'), ('grunge', 'Гранж'), ('gospel', 'Госпел'), ('latin', 'Латиноамериканская музыка'), ('reggaeton', 'Реггетон'), ('k_pop', 'К-поп')], max_length=20, verbose_name='Музыка')),
                ('rhythm', models.CharField(blank=True, choices=[('fast_rhythm', 'Быстрый ритм'), ('slow_rhythm', 'Медленный ритм'), ('variable_rhythm', 'Переменный ритм'), ('rhythmic_editing', 'Ритмический монтаж'), ('parallel_editing', 'Параллельный монтаж'), ('insert_editing', 'Монтаж врезками'), ('leitmotif', 'Лейтмотив')], max_length=20, verbose_name='Ритм')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=portfolio.utils.get_path_to_post_files)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=portfolio.utils.get_path_to_post_files)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50, verbose_name='Тэг поста')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='PostVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=portfolio.utils.get_path_to_post_files)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, max_length=50, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('nickname', models.SlugField(unique=True, verbose_name='Никнейм')),
                ('text', models.TextField(blank=True, verbose_name='Описание профиля')),
                ('image', models.ImageField(null=True, upload_to='photos/avatars', verbose_name='Фото профиля')),
                ('phone_number', models.CharField(blank=True, max_length=15, verbose_name='Номер телефона')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='Город')),
                ('scope_of_work', models.CharField(blank=True, choices=[('cinema', 'Кино'), ('tv', 'Телевидение'), ('theatre', 'Театр'), ('videogames', 'Видеоигры'), ('corporate_video', 'Корпоративное видео'), ('advertising', 'Реклама'), ('education', 'Образование')], max_length=20, verbose_name='Сфера деятельности')),
                ('experience', models.CharField(blank=True, choices=[('over_6_years', 'Более 6 лет'), ('no_experience', 'Нет опыта'), ('3_to_6_years', 'От 3 до 6 лет'), ('1_to_3_years', 'От 1 года до 3 лет')], default='no_experience', max_length=20, verbose_name='Опыт работы')),
                ('specialization', models.CharField(blank=True, choices=[('director_screenwriter', 'Режиссер, сценарист'), ('marketing_advertising_manager', 'Руководитель отдела маркетинга и рекламы')], max_length=30, verbose_name='Специализация')),
                ('employment_type', models.CharField(blank=True, choices=[('full_time', 'Полная занятость'), ('part_time', 'Частичная занятость'), ('project_work', 'Проектная работа'), ('internship', 'Стажировка'), ('volunteering', 'Волонтерство')], max_length=20, verbose_name='Тип занятости')),
                ('work_schedule', models.CharField(blank=True, choices=[('full_day', 'Полный день'), ('shift_schedule', 'Сменный график'), ('flexible_schedule', 'Гибкий график'), ('remote_work', 'Удаленная работа'), ('rotational_method', 'Вахтовый метод')], max_length=20, verbose_name='График работы')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['user__last_name', 'user__first_name', 'patronymic'],
            },
        ),
        migrations.CreateModel(
            name='ProfileSocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Medium', 'Medium'), ('Tumblr', 'Tumblr'), ('ВКонтакте', 'ВКонтакте'), ('Мой Мир', 'Мой Мир'), ('GitHub', 'GitHub'), ('Boosty', 'Boosty'), ('Instagram', 'Instagram'), ('Одноклассники', 'Одноклассники'), ('Telegram', 'Telegram'), ('Facebook', 'Facebook'), ('Pinterest', 'Pinterest'), ('Twitch', 'Twitch'), ('YouTube', 'YouTube'), ('Reddit', 'Reddit'), ('Dribbble', 'Dribbble'), ('Linkedin', 'Linkedin'), ('Patreon', 'Patreon'), ('Discord', 'Discord'), ('Slack', 'Slack'), ('TikTok', 'TikTok'), ('Behance', 'Behance')], max_length=50)),
                ('link', models.URLField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_networks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50, verbose_name='Тэг профиля')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
